{"version":3,"sources":["horas.js","juegos.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","juegosInput","juegos","juegosFiltrados","listadoJuegos","juegoHidden","respuesta","arrayJuegos","juego","nombre","trim","estudio","formatearJuegos","obtenerJuegos","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","juegoHTML","createElement","textContent","juegoId","seleccionarJuego","appendChild","noResultados","mostrarJuegos","obtenerJuego","juegoDOM","juegosDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if(horas) {\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\r\n        const dias= document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda)\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n        if(!Object.values(busqueda).includes('')) {\r\n            (async () => {\r\n                await buscarEventos();\r\n\r\n                const id = inputHiddenHora.value;\r\n\r\n                // Resaltar la hora actual\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada')\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada')\r\n\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })()\r\n        }\r\n\r\n\r\n        function terminoBusqueda(e) {\r\n            //inputHiddenHora.value = e.target.value;\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n            \r\n            if(Object.values(busqueda).includes('')){\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n            \r\n        }\r\n        async function buscarEventos() {\r\n            \r\n            const { dia, categoria_id } = busqueda\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            //permite la seleccion de horas\r\n            //console.log(eventos);\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada')) \r\n           \r\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n           \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( li =>  !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada')) \r\n\r\n            //selecciona horas\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');  //\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada') \r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n        }\r\n\r\n\r\n    }\r\n    \r\n})();","(function() {\r\n    const juegosInput = document.querySelector('#juegos');\r\n\r\n    if(juegosInput) {\r\n        let juegos = [];\r\n        let juegosFiltrados = [];\r\n\r\n        const listadoJuegos = document.querySelector('#listado-juegos')\r\n        const juegoHidden = document.querySelector('[name=\"juego_id\"]') \r\n\r\n        obtenerJuegos();\r\n        juegosInput.addEventListener('input', buscarJuegos)\r\n\r\n        if(juegoHidden.value) {\r\n           (async() => {\r\n                const juego = await obtenerJuego(juegoHidden.value)\r\n                const { nombre, estudio} = juego\r\n\r\n                // Insertar en el HTML\r\n                const juegoDOM = document.createElement('LI');\r\n                juegoDOM.classList.add('listado-ponentse__juego', 'listado-juegos__juego--seleccionado');\r\n                juegoDOM.textContent = `${nombre} ${estudio}`\r\n\r\n                listadoJuegos.appendChild(juegosDOM)\r\n           })()\r\n        }\r\n\r\n        async function obtenerJuegos() {\r\n            const url = `/api/juegos`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            //console.log(juegos)\r\n            formatearJuegos(resultado)\r\n        }\r\n\r\n        async function obtenerJuego(id) {\r\n            const url = `/api/juego?id=${id}`;\r\n            const respuesta = await fetch(url)\r\n            const resultado = await respuesta.json()\r\n            return resultado;\r\n        }\r\n\r\n        function formatearJuegos(arrayJuegos = []) {\r\n            juegos = arrayJuegos.map( juego => {\r\n                return {\r\n                    nombre: `${juego.nombre.trim()} ${juego.estudio.trim()}`,\r\n                    id: juego.id\r\n                } \r\n            })\r\n            //console.log(juegos)\r\n        }\r\n\r\n        function buscarJuegos(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                juegosFiltrados = juegos.filter(juego => {\r\n                    if(juego.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return juego\r\n                    }\r\n                })\r\n            } else {\r\n                juegosFiltrados = []\r\n            }\r\n\r\n            mostrarJuegos();\r\n        }\r\n\r\n        function mostrarJuegos() {\r\n\r\n            while(listadoJuegos.firstChild) {\r\n                listadoJuegos.removeChild(listadoJuegos.firstChild)\r\n            }\r\n\r\n            if(juegosFiltrados.length > 0) {\r\n                juegosFiltrados.forEach(juegos => {\r\n                    const juegoHTML = document.createElement('LI');\r\n                    juegoHTML.classList.add('listado-juegos__juego')\r\n                    juegoHTML.textContent = juego.nombre;\r\n                    juegoHTML.dataset.juegoId = juego.id\r\n                    juegoHTML.onclick = seleccionarJuego\r\n\r\n                    // Añadir al dom\r\n                    listadoJuegos.appendChild(juegoHTML)\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P')\r\n                noResultados.classList.add('listado-juegos__no-resultado')\r\n                noResultados.textContent = 'No hay resultados para tu búsqueda'\r\n                listadoJuegos.appendChild(noResultados)              \r\n            }\r\n        }\r\n\r\n        function seleccionarJuegos(e) {\r\n            const juego = e.target;\r\n\r\n            // Remover la clase previa\r\n            const juegoPrevio = document.querySelector('.listado-juegos__juego--seleccionado')\r\n            if(juegoPrevio) {\r\n                juegoPrevio.classList.remove('listado-juegos__juego--seleccionado')\r\n            }\r\n            juego.classList.add('listado-juegos__juego--seleccionado')\r\n\r\n            juegoHidden.value = juego.dataset.juegoId\r\n        }\r\n    }\r\n    \r\n\r\n})();","(function() {\r\n\r\n    const tagsInput = document.querySelector('#tags_input')\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n \r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.value < 1) { \r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag')\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta)\r\n            })\r\n            actualizarInputHidden();\r\n        }   \r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove()\r\n            tags = tags.filter(tag => tag !== e.target.textContent)\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n           tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})();"]}